---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import '../styles/global.css';
---

<Layout title="Adonis ODM - MongoDB ODM for AdonisJS v6">
  <div class="min-h-screen bg-white dark:bg-gray-900">
    <Header />

    <!-- Hero Section -->
    <div class="relative overflow-hidden">
      <div class="max-w-7xl mx-auto">
        <div class="relative z-10 pb-8 bg-white dark:bg-gray-900 sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32">
          <main class="mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28" data-pagefind-body>
            <div class="sm:text-center lg:text-left">
              <h1 class="text-4xl tracking-tight font-extrabold text-gray-900 dark:text-white sm:text-5xl md:text-6xl">
                <span class="block xl:inline">MongoDB ODM for</span>
                <span class="block text-primary-600 xl:inline">AdonisJS v6</span>
              </h1>
              <p class="mt-3 text-base text-gray-500 dark:text-gray-400 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0">
                A familiar Lucid ORM-like interface for working with MongoDB databases.
                Featuring decorator-based models, fluent query builder, and full TypeScript support.
              </p>
              <div class="mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start">
                <div class="shadow">
                  <a
                    href="/docs/introduction"
                    class="w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium text-white bg-primary-600 hover:bg-primary-700 md:py-4 md:text-lg md:px-10 transition-colors"
                  >
                    Get started
                  </a>
                </div>
                <div class="mt-3 sm:mt-0 sm:ml-3">
                  <a
                    href="https://github.com/DreamsHive/adonis-odm"
                    class="w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium text-primary-700 bg-primary-100 hover:bg-primary-200 dark:bg-primary-900/20 dark:text-primary-300 dark:hover:bg-primary-900/30 md:py-4 md:text-lg md:px-10 transition-colors"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    View on GitHub
                  </a>
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>

    </div>

    <!-- Features Section -->
    <div class="py-12 bg-gray-50 dark:bg-gray-800">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="lg:text-center">
          <h2 class="text-base text-primary-600 font-semibold tracking-wide uppercase">Features</h2>
          <p class="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 dark:text-white sm:text-4xl">
            Everything you need for MongoDB
          </p>
          <p class="mt-4 max-w-2xl text-xl text-gray-500 dark:text-gray-400 lg:mx-auto">
            Built with developer experience in mind, featuring familiar patterns from Lucid ORM.
          </p>
        </div>

        <div class="mt-10">
          <dl class="space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10">
            <div class="relative">
              <dt>
                <div class="absolute flex items-center justify-center h-12 w-12 bg-primary-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z" />
                  </svg>
                </div>
                <p class="ml-16 text-lg leading-6 font-medium text-gray-900 dark:text-white">Familiar API</p>
              </dt>
              <dd class="mt-2 ml-16 text-base text-gray-500 dark:text-gray-400">
                Similar to AdonisJS Lucid ORM for easy adoption by existing AdonisJS developers.
              </dd>
            </div>

            <div class="relative">
              <dt>
                <div class="absolute flex items-center justify-center h-12 w-12 bg-primary-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                  </svg>
                </div>
                <p class="ml-16 text-lg leading-6 font-medium text-gray-900 dark:text-white">Decorator-based Models</p>
              </dt>
              <dd class="mt-2 ml-16 text-base text-gray-500 dark:text-gray-400">
                Use decorators to define your model schema with full TypeScript support.
              </dd>
            </div>

            <div class="relative">
              <dt>
                <div class="absolute flex items-center justify-center h-12 w-12 bg-primary-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
                <p class="ml-16 text-lg leading-6 font-medium text-gray-900 dark:text-white">Fluent Query Builder</p>
              </dt>
              <dd class="mt-2 ml-16 text-base text-gray-500 dark:text-gray-400">
                Chainable query methods with MongoDB-specific operations and intuitive syntax.
              </dd>
            </div>

            <div class="relative">
              <dt>
                <div class="absolute flex items-center justify-center h-12 w-12 bg-primary-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                  </svg>
                </div>
                <p class="ml-16 text-lg leading-6 font-medium text-gray-900 dark:text-white">Embedded Documents</p>
              </dt>
              <dd class="mt-2 ml-16 text-base text-gray-500 dark:text-gray-400">
                Type-safe embedded document support with full CRUD operations and query builders.
              </dd>
            </div>

            <div class="relative">
              <dt>
                <div class="absolute flex items-center justify-center h-12 w-12 bg-primary-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                  </svg>
                </div>
                <p class="ml-16 text-lg leading-6 font-medium text-gray-900 dark:text-white">ACID Transactions</p>
              </dt>
              <dd class="mt-2 ml-16 text-base text-gray-500 dark:text-gray-400">
                Full ACID transaction support with managed and manual modes for data consistency.
              </dd>
            </div>

            <div class="relative">
              <dt>
                <div class="absolute flex items-center justify-center h-12 w-12 bg-primary-500 text-white">
                  <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                </div>
                <p class="ml-16 text-lg leading-6 font-medium text-gray-900 dark:text-white">TypeScript First</p>
              </dt>
              <dd class="mt-2 ml-16 text-base text-gray-500 dark:text-gray-400">
                Built with TypeScript from the ground up with full IntelliSense support.
              </dd>
            </div>
          </dl>
        </div>
      </div>
    </div>

    <!-- Code Example Section -->
    <div class="py-12 bg-white dark:bg-gray-900">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="lg:text-center mb-12">
          <h2 class="text-base text-primary-600 font-semibold tracking-wide uppercase">Quick Example</h2>
          <p class="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 dark:text-white sm:text-4xl">
            Get started in minutes
          </p>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div>
            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Define your model</h3>
            <pre class="bg-gray-50 dark:bg-gray-800 p-4 overflow-x-auto"><code class="text-sm text-gray-800 dark:text-gray-200">{`import { BaseModel, column } from 'adonis-odm'
import { DateTime } from 'luxon'

export default class User extends BaseModel {
  @column({ isPrimary: true })
  declare _id: string

  @column()
  declare name: string

  @column()
  declare email: string

  @column.dateTime({ autoCreate: true })
  declare createdAt: DateTime

  @column.dateTime({ autoCreate: true, autoUpdate: true })
  declare updatedAt: DateTime
}`}</code></pre>
          </div>

          <div>
            <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Use the fluent API</h3>
            <pre class="bg-gray-50 dark:bg-gray-800 p-4 overflow-x-auto"><code class="text-sm text-gray-800 dark:text-gray-200">{`// Create a user
const user = await User.create({
  name: 'John Doe',
  email: 'john@example.com'
})

// Query with fluent API
const adults = await User.query()
  .where('age', '>=', 18)
  .where('email', 'like', '%@gmail.com')
  .orderBy('createdAt', 'desc')
  .paginate(1, 10)

// Use transactions
await db.transaction(async (trx) => {
  const user = await User.create({
    name: 'Jane Smith',
    email: 'jane@example.com'
  }, { client: trx })

  // More operations...
})`}</code></pre>
          </div>
        </div>
      </div>
    </div>

    <!-- CTA Section -->
    <div class="bg-primary-600">
      <div class="max-w-2xl mx-auto text-center py-16 px-4 sm:py-20 sm:px-6 lg:px-8">
        <h2 class="text-3xl font-extrabold text-white sm:text-4xl">
          <span class="block">Ready to get started?</span>
        </h2>
        <p class="mt-4 text-lg leading-6 text-primary-200">
          Install Adonis ODM and start building with MongoDB today.
        </p>
        <div class="mt-8 flex justify-center space-x-4">
          <a
            href="/docs/installation"
            class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium text-primary-600 bg-white hover:bg-primary-50 transition-colors"
          >
            Installation Guide
          </a>
          <a
            href="/docs/introduction"
            class="inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium text-white bg-primary-500 hover:bg-primary-400 transition-colors"
          >
            Documentation
          </a>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <footer class="bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-700">
      <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <p class="text-gray-500 dark:text-gray-400">
            Built with ❤️ by <a href="https://www.dreamshive.com" rel="dofollow">DreamsHive</a> team. Licensed under MIT.
          </p>
          <div class="mt-4 flex justify-center space-x-6">
            <a href="https://github.com/DreamsHive/adonis-odm" class="text-gray-400 hover:text-gray-500 dark:hover:text-gray-300">
              <span class="sr-only">GitHub</span>
              <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
            </a>
            <a href="https://www.npmjs.com/package/adonis-odm" class="text-gray-400 hover:text-gray-500 dark:hover:text-gray-300">
              <span class="sr-only">npm</span>
              <svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M1.763 0C.786 0 0 .786 0 1.763v20.474C0 23.214.786 24 1.763 24h20.474c.977 0 1.763-.786 1.763-1.763V1.763C24 .786 23.214 0 22.237 0zM5.13 5.323l13.837.019-.009 13.836h-3.464l.01-10.382h-3.456L12.04 19.17H5.113z"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </footer>
  </div>
</Layout>
